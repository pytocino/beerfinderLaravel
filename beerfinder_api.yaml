openapi: 3.0.1
info:
  title: BEERFINDER - OpenAPI 3.1.0
  version: 1.0.11
security:
  - basic_auth: []
servers:
  - url: http://beerfinder.test/api/records/
    variables: {}
    description: Entorno React
  - url: http://beerfinder.test/api/v1/
    variables: {}
    description: Entorno produccion
tags:
  - name: users
    description: Operaciones con los usuarios
  - name: beers
    description: Operaciones con las beers
  - name: locals
    description: Operaciones con los locals
  - name: beerlocals
    description: Operaciones con los beerlocals
  - name: visits
    description: Operaciones con las visits
paths:
  /users:
    get:
      tags:
        - users
      summary: Obtener todos los usuarios
      description: Obtener todos los usuarios
      operationId: users.index
      responses:
        '200':
          description: Usuarios obtenidos correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
    post:
      tags:
        - users
      summary: Crear un usuario
      description: Crear un usuario
      operationId: users.store
      requestBody:
        description: Datos del usuario
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: Usuario creado correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /users/{id}:
    get:
      tags:
        - users
      summary: Obtener un usuario
      description: Obtener un usuario
      operationId: users.show
      parameters:
        - name: id
          in: path
          description: ID del usuario
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Usuario obtenido correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
    put:
      tags:
        - users
      summary: Actualizar un usuario
      description: Actualizar un usuario
      operationId: users.update
      parameters:
        - name: id
          in: path
          description: ID del usuario
          required: true
          schema:
            type: integer
      requestBody:
        description: Datos del usuario
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: Usuario actualizado correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
    delete:
      tags:
        - users
      summary: Eliminar un usuario
      description: Eliminar un usuario
      operationId: users.destroy
      parameters:
        - name: id
          in: path
          description: ID del usuario
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Usuario eliminado correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /beers:
    get:
      tags:
        - beers
      summary: Obtener todas las beers
      description: Obtener todas las beers
      operationId: beers.index
      responses:
        '200':
          description: Beers obtenidas correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Beer'
        '401':
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
    post:
      tags:
        - beers
      summary: Crear una beer
      description: Crear una beer
      operationId: beers.store
      requestBody:
        description: Datos de la beer
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Beer'
      responses:
        '201':
          description: Beer creada correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Beer'
        '401':
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /beers/{id}:
    get:
      tags:
        - beers
      summary: Obtener una beer
      description: Obtener una beer
      operationId: beers.show
      parameters:
        - name: id
          in: path
          description: ID de la beer
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Beer obtenida correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Beer'
        '401':
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
    put:
      tags:
        - beers
      summary: Actualizar una beer
      description: Actualizar una beer
      operationId: beers.update
      parameters:
        - name: id
          in: path
          description: ID de la beer
          required: true
          schema:
            type: integer
      requestBody:
        description: Datos de la beer
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Beer'
      responses:
        '200':
          description: Beer actualizada correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Beer'
        '401':
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
    delete:
      tags:
        - beers
      summary: Eliminar una beer
      description: Eliminar una beer
      operationId: beers.destroy
      parameters:
        - name: id
          in: path
          description: ID de la beer
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Beer eliminada correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Beer'
        '401':
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /locals:
    get:
      tags:
        - locals
      summary: Obtener todos los locals
      description: Obtener todos los locals
      operationId: locals.index
      responses:
        '200':
          description: Locals obtenidos correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Local'
        '401':
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
    post:
      tags:
        - locals
      summary: Crear un local
      description: Crear un local
      operationId: locals.store
      requestBody:
        description: Datos del local
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Local'
      responses:
        '201':
          description: Local creado correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Local'
        '401':
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /locals/{id}:
    get:
      tags:
        - locals
      summary: Obtener un local
      description: Obtener un local
      operationId: locals.show
      parameters:
        - name: id
          in: path
          description: ID del local
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Local obtenido correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Local'
        '401':
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
    put:
      tags:
        - locals
      summary: Actualizar un local
      description: Actualizar un local
      operationId: locals.update
      parameters:
        - name: id
          in: path
          description: ID del local
          required: true
          schema:
            type: integer
      requestBody:
        description: Datos del local
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Local'
      responses:
        '200':
          description: Local actualizado correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Local'
        '401':
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
    delete:
      tags:
        - locals
      summary: Eliminar un local
      description: Eliminar un local
      operationId: locals.destroy
      parameters:
        - name: id
          in: path
          description: ID del local
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Local eliminado correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Local'
        '401':
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /beerlocals:
    get:
      tags:
        - beerlocals
      summary: Obtener todos los beerlocals
      description: Obtener todos los beerlocals
      operationId: beerlocals.index
      responses:
        '200':
          description: Beerlocals obtenidos correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Beerlocal'
        '401':
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
    post:
      tags:
        - beerlocals
      summary: Crear un beerlocal
      description: Crear un beerlocal
      operationId: beerlocals.store
      requestBody:
        description: Datos del beerlocal
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Beerlocal'
      responses:
        '201':
          description: Beerlocal creado correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Beerlocal'
        '401':
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /beerlocals/{id}:
    get:
      tags:
        - beerlocals
      summary: Obtener un beerlocal
      description: Obtener un beerlocal
      operationId: beerlocals.show
      parameters:
        - name: id
          in: path
          description: ID del beerlocal
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Beerlocal obtenido correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Beerlocal'
        '401':
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
    put:
      tags:
        - beerlocals
      summary: Actualizar un beerlocal
      description: Actualizar un beerlocal
      operationId: beerlocals.update
      parameters:
        - name: id
          in: path
          description: ID del beerlocal
          required: true
          schema:
            type: integer
      requestBody:
        description: Datos del beerlocal
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Beerlocal'
      responses:
        '200':
          description: Beerlocal actualizado correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Beerlocal'
        '401':
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
    delete:
      tags:
        - beerlocals
      summary: Eliminar un beerlocal
      description: Eliminar un beerlocal
      operationId: beerlocals.destroy
      parameters:
        - name: id
          in: path
          description: ID del beerlocal
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Beerlocal eliminado correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Beerlocal'
        '401':
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /visits:
    get:
      tags:
        - visits
      summary: Obtener todas las visits
      description: Obtener todas las visits
      operationId: visits.index
      responses:
        '200':
          description: Visits obtenidas correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Visit'
        '401':
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        email:
          type: string
        email_verified_at:
          type: string
        created_at:
          type: string
        updated_at:
          type: string
      required:
        - id
        - name
        - email
        - email_verified_at
        - created_at
        - updated_at
      xml:
        name: User
    Beer:
      type: object
      properties:
        id:
          type: integer
        users_id:
          type: integer
        name:
          type: string
        color:
          type: string
        graduation:
          type: number
        taste:
          type: string
        type:
          type: string
        description:
          type: string
        image:
          type: string
        country:
          type: string
        region:
          type: string
        created_at:
          type: string
        updated_at:
          type: string
      required:
        - id
        - name
        - users_id
        - color
        - graduation
        - taste
        - type
        - description
        - image
        - country
        - region
        - created_at
        - updated_at
      xml:
        name: Beer
    Local:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        users_id:
          type: integer
        type:
          type: string
        description:
          type: string
        email:
          type: string
        phone:
          type: string
        address:
          type: string
        latitude:
          type: string
        longitude:
          type: string
        city:
          type: string
        region:
          type: string
        website:
          type: string
        image:
          type: string
        verified:
          type: boolean
        created_at:
          type: string
        updated_at:
          type: string
      required:
        - id
        - name
        - users_id
        - type
        - description
        - email
        - phone
        - address
        - latitude
        - longitude
        - city
        - region
        - website
        - image
        - verified
        - created_at
        - updated_at
      xml:
        name: Local
    Beerlocal:
      type: object
      properties:
        id:
          type: integer
        beer_id:
          type: integer
        local_id:
          type: integer
        created_at:
          type: string
        updated_at:
          type: string
      required:
        - id
        - beer_id
        - local_id
        - created_at
        - updated_at
      xml:
        name: Beerlocals
    Visit:
      type: object
      properties:
        id:
          type: integer
        count:
          type: integer
      required:
        - id
        - count
      xml:
        name: Visit
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
        type:
          type: string
        message:
          type: string
      required:
        - code
        - type
        - message
      xml:
        name: ApiResponse
  requestBodies:
    User:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/User'
    Beer:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Beer'
    Local:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Local'
    Beerlocal:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Beerlocal'
    Visit:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Visit'
  securitySchemes:
    basic_auth:
      type: http
      scheme: basic
