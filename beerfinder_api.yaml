openapi: 3.0.1
info:
  title: BEERFINDER - OpenAPI 3.0
  version: 1.0.11
servers:
  - url: http://beerfinder.test/api/records/
    variables: {}
    description: Entorno React
tags:
  - name: user
    description: Operaciones con los usuarios
  - name: beers
    description: Operaciones con las beers
  - name: locals
    description: Operaciones con los locals
  - name: beerlocals
    description: Operaciones con los beerlocals
  - name: visits
    description: Operaciones con las visits
paths:
  /user:
    post:
      get:
        tags:
          - user
        summary: Obtener todos los usuarios
        description: Obtener todos los usuarios
        operationId: user.index
        responses:
          "200":
            description: Usuarios obtenidos correctamente
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/UserIndexResponse"
  /user/login:
    post:
      tags:
        - user
      summary: Login de usuario
      description: Login de usuario
      operationId: user.login
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserLoginRequest"
      responses:
        "200":
          description: Login correcto
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserLoginResponse"
        "422":
          description: Error de validación
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnprocessableEntity"
  /user/{id}:
    get:
      tags:
        - user
      summary: Obtener un usuario
      description: Obtener un usuario
      operationId: user.show
      parameters:
        - name: id
          in: path
          description: ID del usuario
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Usuario obtenido correctamente
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserShowResponse"
        "404":
          description: Usuario no encontrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFound"
  /user/{id}/update:
    put:
      tags:
        - user
      summary: Actualizar un usuario
      description: Actualizar un usuario
      operationId: user.update
      parameters:
        - name: id
          in: path
          description: ID del usuario
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserUpdateRequest"
      responses:
        "200":
          description: Usuario actualizado correctamente
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserUpdateResponse"
        "404":
          description: Usuario no encontrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFound"
        "422":
          description: Error de validación
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnprocessableEntity"
  /user/{id}/delete:
    delete:
      tags:
        - user
      summary: Eliminar un usuario
      description: Eliminar un usuario
      operationId: user.delete
      parameters:
        - name: id
          in: path
          description: ID del usuario
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Usuario eliminado correctamente
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserDeleteResponse"
        "404":
          description: Usuario no encontrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFound"
  /beers:
    get:
      tags:
        - beers
      summary: Obtener todas las beers
      description: Obtener todas las beers
      operationId: beers.index
      responses:
        "200":
          description: Beers obtenidas correctamente
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeersIndexResponse"
  /beers/{id}:
    get:
      tags:
        - beers
      summary: Obtener una beer
      description: Obtener una beer
      operationId: beers.show
      parameters:
        - name: id
          in: path
          description: ID de la beer
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Beer obtenida correctamente
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeersShowResponse"
        "404":
          description: Beer no encontrada
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFound"
  /locals:
    get:
      tags:
        - locals
      summary: Obtener todos los locals
      description: Obtener todos los locals
      operationId: locals.index
      responses:
        "200":
          description: Locals obtenidos correctamente
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LocalsIndexResponse"
  /locals/{id}:
    get:
      tags:
        - locals
      summary: Obtener un local
      description: Obtener un local
      operationId: locals.show
      parameters:
        - name: id
          in: path
          description: ID del local
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Local obtenido correctamente
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LocalsShowResponse"
        "404":
          description: Local no encontrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFound"
  /beerlocals:
    get:
      tags:
        - beerlocals
      summary: Obtener todos los beerlocals
      description: Obtener todos los beerlocals
      operationId: beerlocals.index
      responses:
        "200":
          description: Beerlocals obtenidos correctamente
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeerlocalsIndexResponse"
  /beerlocals/{id}:
    get:
      tags:
        - beerlocals
      summary: Obtener un beerlocal
      description: Obtener un beerlocal
      operationId: beerlocals.show
      parameters:
        - name: id
          in: path
          description: ID del beerlocal
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Beerlocal obtenido correctamente
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeerlocalsShowResponse"
        "404":
          description: Beerlocal no encontrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFound"
  /visits:
    get:
      tags:
        - visits
      summary: Obtener todas las visits
      description: Obtener todas las visits
      operationId: visits.index
      responses:
        "200":
          description: Visits obtenidas correctamente
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VisitsIndexResponse"
  /visits/{id}:
    get:
      tags:
        - visits
      summary: Obtener una visit
      description: Obtener una visit
      operationId: visits.show
      parameters:
        - name: id
          in: path
          description: ID de la visit
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Visit obtenida correctamente
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VisitsShowResponse"
        "404":
          description: Visit no encontrada
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFound"
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        email:
          type: string
        email_verified_at:
          type: string
        created_at:
          type: string
        updated_at:
          type: string
      required:
        - id
        - name
        - email
        - email_verified_at
        - created_at
        - updated_at
      xml:
        name: Users
  Beer:
    type: object
    properties:
      id:
        type: integer
      user_id:
        type: integer
      name:
        type: string
      color:
        type: string
      graduation:
        type: float
      taste:
        type: string
      type:
        type: string
      description:
        type: string
      image:
        type: string
      country:
        type: string
      region:
        type: string
      created_at:
        type: string
      updated_at:
        type: string
    required:
      - id
      - name
      - user_id
      - color
      - graduation
      - taste
      - type
      - description
      - image
      - country
      - region
      - created_at
      - updated_at
    xml:
      name: Beers
  Local:
    type: object
    properties:
      id:
        type: integer
      name:
        type: string
      user_id:
        type: integer
      type:
        type: string
      description:
        type: string
      email:
        type: string
      phone:
        type: string
      address:
        type: string
      latitude:
        type: string
      longitude:
        type: string
      city:
        type: string
      region:
        type: string
      website:
        type: string
      image:
        type: string
      verified:
        type: boolean
      created_at:
        type: string
      updated_at:
        type: string
    required:
      - id
      - name
      - user_id
      - type
      - description
      - email
      - phone
      - address
      - latitude
      - longitude
      - city
      - region
      - website
      - image
      - verified
      - created_at
      - updated_at
    xml:
      name: Locals
  Beerlocal:
    type: object
    properties:
      id:
        type: integer
      beer_id:
        type: integer
      local_id:
        type: integer
      created_at:
        type: string
      updated_at:
        type: string
    required:
      - id
      - beer_id
      - local_id
      - created_at
      - updated_at
    xml:
      name: Beerlocals
  Visit:
    type: object
    properties:
      id:
        type: integer
      count:
        type: integer
    required:
      - id
      - count
    xml:
      name: Visits
  ApiResponse:
    type: object
    properties:
      code:
        type: integer
      type:
        type: string
      message:
        type: string
    required:
      - code
      - type
      - message
    xml:
      name: ApiResponses
    requestBodies:
      User:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      Beer:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Beer"
      Local:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Local"
      Beerlocal:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Beerlocal"
      Visit:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Visit"
    securitySchemes:
      basic_auth:
        type: http
        scheme: basic
